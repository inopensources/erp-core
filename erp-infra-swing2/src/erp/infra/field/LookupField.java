package erp.infra.field;

import erp.infra.annotation.Form;
import java.util.Set;

/**
 * LookupField class.
 * 
 * @author Leonardo Ono (ono.leo@gmail.com)
 * @since 1.00.00 (01/02/2013 09:29)
 */
public class LookupField extends Field {

    public LookupField() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();
        text = new javax.swing.JTextField();
        panel = new javax.swing.JPanel();
        label = new javax.swing.JLabel();
        button = new javax.swing.JButton();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        splitPane.setBorder(null);
        splitPane.setDividerLocation(100);
        splitPane.setLeftComponent(text);

        panel.setLayout(new java.awt.BorderLayout());

        label.setText("description");
        label.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 0, 0));
        panel.add(label, java.awt.BorderLayout.CENTER);

        button.setText("...");
        button.setPreferredSize(new java.awt.Dimension(32, 23));
        panel.add(button, java.awt.BorderLayout.LINE_START);

        splitPane.setRightComponent(panel);

        add(splitPane);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button;
    private javax.swing.JLabel label;
    private javax.swing.JPanel panel;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JTextField text;
    // End of variables declaration//GEN-END:variables

    @Override
    public boolean isAcceptableType(Class type) {
        Form formAnnotation = (Form) type.getAnnotation(Form.class);
        return (formAnnotation != null);
    }

    @Override
    public void init(Class type) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public boolean isEditable() {
        return text.isEditable();
    }

    @Override
    public void setEditable(boolean editable) {
        text.setEditable(editable);
        button.setEnabled(editable);
    }

    @Override
    public void setValue(Object value) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public Object getValue() {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
}
