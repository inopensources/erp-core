package erp.infra.field;

import java.util.Set;

/**
 * CheckField class.
 * 
 * @author Leonardo Ono (ono.leo@gmail.com)
 * @since 1.00.00 (30/01/2013 12:28)
 */
public class CheckField extends Field {

    public CheckField() {
        initComponents();
        component = checkBox;
        
        // Set acceptable types for this field
        new BooleanTypeConfig();
    }
    
    @Override
    public boolean isAcceptableType(Class type) {
        return typeConfigs.containsKey(type);
    }
    
    @Override
    public Set<Class> acceptableTypes() {
        return typeConfigs.keySet();
    }
    
    /**
     * Inicia as configuracoes padroes para cada tipo aceitavel.
     */
    @Override
    public void init(Class type) {
        typeConfig = typeConfigs.get(type);
        if (typeConfig == null) {
            throw new UnsupportedOperationException("Type " 
                    + type.getName() + " not supported !");
        }
        typeConfig.config();
    }
    
    @Override
    public void setEditable(boolean editable) {
        checkBox.setEnabled(editable);
    }
    
    @Override
    public boolean isEditable() {
        return checkBox.isEnabled();
    }
    
    @Override
    public void setValue(Object value) {
        typeConfig.setValue(value);
    }

    @Override
    public Object getValue() {
        return typeConfig.getValue();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkBox = new javax.swing.JCheckBox();

        setLayout(new java.awt.BorderLayout());

        checkBox.setPreferredSize(new java.awt.Dimension(21, 25));
        add(checkBox, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkBox;
    // End of variables declaration//GEN-END:variables

    // --- TextField specific properties ---
    
    public void setChecked(boolean checked) {
        checkBox.setSelected(checked);
    }
    
    public boolean isChecked() {
        return checkBox.isSelected();
    }

    // --- Default type configs ---
    
    private class BooleanTypeConfig extends TypeConfig<Boolean> {
        BooleanTypeConfig() {
            setAllTypeConfigs();
        }
        
        private void setAllTypeConfigs() {
            typeConfigs.put(Boolean.class, this);
            typeConfigs.put(boolean.class, this);
        }
        
        @Override
        public void config() {
        }

        @Override
        Boolean getValue() {
            return checkBox.isSelected();
        }

        @Override
        void setValue(Boolean value) {
            checkBox.setSelected(value);
        }
    }
    
}
